{
	"info": {
		"_postman_id": "2ee604ce-3de0-40b6-aafd-1daaf6d39c3e",
		"name": "laravel10-demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6689115"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 等於Email",
									"  pm.expect(response.email).to.be.eql(",
									"    pm.collectionVariables.get(\"userEmail\")",
									"  );",
									"",
									"  pm.expect(response.code).to.be.string;",
									"  pm.expect(response.code.length).to.be.eql(6);",
									"",
									"  // 儲存驗證碼",
									"  pm.collectionVariables.set(\"verifyCode\", response.code);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"pm.collectionVariables.set('userName', pm.variables.replaceIn('{{$randomUserName}}'))",
									"pm.collectionVariables.set('userEmail', pm.variables.replaceIn('{{$randomExampleEmail}}'))",
									"pm.collectionVariables.set('userPassword', pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{userName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{userPassword}}",
									"type": "text"
								},
								{
									"key": "comfirm_password",
									"value": "{{userPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "send-verify-email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 等於Email",
									"  pm.expect(response.email).to.be.eql(",
									"    pm.collectionVariables.get(\"userEmail\")",
									"  );",
									"",
									"  pm.expect(response.code).to.be.string;",
									"  pm.expect(response.code.length).to.be.eql(6);",
									"",
									"  // 儲存驗證碼",
									"  pm.collectionVariables.set(\"verifyCode\", response.code);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/send-verify-email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"send-verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "verify-email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 清除驗證碼",
									"  pm.collectionVariables.set(\"verifyCode\", \"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{verifyCode}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/verify-email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "forgot-password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 等於Email",
									"  pm.expect(response.email).to.be.eql(",
									"    pm.collectionVariables.get(\"userEmail\")",
									"  );",
									"",
									"  pm.expect(response.code).to.be.string;",
									"  pm.expect(response.code.length).to.be.eql(6);",
									"",
									"  // 儲存驗證碼",
									"  pm.collectionVariables.set(\"verifyCode\", response.code);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset-password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 清除驗證碼",
									"  pm.collectionVariables.set(\"verifyCode\", \"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('userPassword', pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{userPassword}}",
									"type": "text"
								},
								{
									"key": "comfirm_password",
									"value": "{{userPassword}}",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{verifyCode}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 語法來源",
									"// https://www.chaijs.com/",
									"// https://www.chaijs.com/api/bdd",
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  // 檢查有沒有token",
									"  pm.expect(response).to.have.property('token');",
									"",
									"  // 檢查是不是字串",
									"  pm.expect(response.token).to.be.a('string');",
									"",
									"  // 存到變數",
									"  pm.collectionVariables.set(\"apiToken\", response.token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "{{userEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{userPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  // 檢查有沒有token",
									"  pm.expect(response).to.have.property('message');",
									"",
									"  // 檢查是不是字串",
									"  pm.expect(response.message).to.be.eql('success');",
									"",
									"  // 把token存到變數",
									"  pm.collectionVariables.set(\"apiToken\", '');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "socialite-signin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "provider",
									"value": "google",
									"type": "text"
								},
								{
									"key": "token",
									"value": "ya29.a0AfB_byCnDDINcHRm_CfeWcGnWeu982-KUqgGrHo88X_4JvFN3VQcoptJO2m6_6aKP7_kDKqdJu7_wLFhPUYOq6uJ2kIvPkSEAahMpP1aIQeRND_kTWNzrOB9CCykXQeNOlRF2Y67B1oVZUQiXbkMR_U9dvj-mF83st_ulAaCgYKAVsSARASFQHsvYls7rXeUocnTAEChMaDC1CUjA0173",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/socialite/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"socialite",
								"signin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "me",
			"item": [
				{
					"name": "show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.data.name).to.be.eql(",
									"    pm.collectionVariables.get(\"userName\")",
									"  );",
									"",
									"  pm.expect(response.data.email).to.be.eql(",
									"    pm.collectionVariables.get(\"userEmail\")",
									"  );",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set('userName', pm.variables.replaceIn('{{$randomUserName}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.expect(response.data.name).to.be.eql(",
									"    pm.collectionVariables.get(\"userName\")",
									"  );",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{userName}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    postman.setEnvironmentVariable('file', '');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "file",
									"value": "{{file}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/me/avatar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user.post",
			"item": [
				{
					"name": "list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/user/post?page=1&limit=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.expect(response.data.title).to.be.a(\"string\");",
									"",
									"  pm.expect(response.data.title).to.be.eql(",
									"    pm.collectionVariables.get(\"postTitle\")",
									"  );",
									"",
									"  pm.expect(response.data.content).to.be.eql(",
									"    pm.collectionVariables.get(\"postContent\")",
									"  );",
									"});",
									"",
									"pm.test(\"Schema\", function () {",
									"  const schema = {",
									"    type: \"object\",",
									"    properties: {",
									"      data: {",
									"        type: \"object\",",
									"        properties: {",
									"            id: {",
									"                type: \"integer\",",
									"                // pattern: '^\\d{1,1}$',",
									"            },",
									"            title: {",
									"                type: \"string\",",
									"            },",
									"            content: {",
									"                type: \"string\"",
									"            },",
									"            created_at:{",
									"                type: \"string\",",
									"                format: \"date-time\",",
									"            }",
									"        },",
									"        required: ['id', 'title', 'content'],",
									"        additionalProperties: true",
									"      },",
									"    },",
									"  };",
									"",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// 變數來源",
									"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
									"",
									"pm.collectionVariables.set('postTitle', pm.variables.replaceIn('{{$randomLoremSentence}}'))",
									"pm.collectionVariables.set('postContent', pm.variables.replaceIn('{{$randomLoremParagraphs}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "{{postTitle}}",
									"type": "text"
								},
								{
									"key": "content",
									"value": "{{postContent}}",
									"type": "text"
								},
								{
									"key": "cover",
									"value": "{{file}}",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/user/post",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    postman.setEnvironmentVariable('file', '');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "test123",
									"type": "text"
								},
								{
									"key": "content",
									"value": "test22",
									"type": "text"
								},
								{
									"key": "cover",
									"value": "{{file}}",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/user/post/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"post",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseUrl}}/api/user/post/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"post",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "post",
			"item": [
				{
					"name": "list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Schema\", function () {",
									"  const schema = {",
									"    type: \"object\",",
									"    properties: {",
									"      cached_at: {",
									"        type: \"string\",",
									"        format: \"date-time\",",
									"      },",
									"      data: {",
									"        type: \"array\",",
									"        items: {",
									"            type: \"object\",",
									"            properties: {",
									"                id: {",
									"                    type: \"integer\"",
									"                },",
									"                title: {",
									"                    type: \"string\"",
									"                }",
									"            },",
									"            required: ['id', 'title'],",
									"            additionalProperties: true",
									"        }",
									"      },",
									"    },",
									"    required: ['cached_at', 'data'],",
									"  };",
									"",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test('Header', function() {",
									"    const host = pm.response.headers.get('Host')",
									"",
									"    pm.expect(host).to.be.eql('localhost')",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/post?page=1&limit=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"post"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.expect(response.data.id).to.be.eql(parseInt(pm.collectionVariables.get('postId')));",
									"",
									"  pm.expect(response.data.title).to.be.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/post/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"post",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "favorite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "action",
									"value": "add",
									"description": "add,del",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/post/:postId/favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"post",
								":postId",
								"favorite"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "action",
									"value": "add",
									"description": "add,del",
									"type": "text"
								},
								{
									"key": "type",
									"value": "like",
									"description": "like,dislike",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/post/:postId/like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"post",
								":postId",
								"like"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "file",
			"item": [
				{
					"name": "temporary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Format\", function () {",
									"  pm.response.to.be.json;",
									"",
									"  // 檢查有沒有token",
									"  pm.expect(response).to.have.property('file');",
									"",
									"  // 檢查是不是字串",
									"  pm.expect(response.file).to.be.string;",
									"",
									"  // 存到變數",
									"  pm.collectionVariables.set(\"file\", response.file);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/miles/Downloads/白貓.jpg"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/file/temporary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"file",
								"temporary"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{apiToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "apiToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "postId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "postTitle",
			"value": "post title"
		},
		{
			"key": "postContent",
			"value": "post content"
		},
		{
			"key": "userName",
			"value": "test"
		},
		{
			"key": "userEmail",
			"value": "test@email.com"
		},
		{
			"key": "userPassword",
			"value": "password"
		},
		{
			"key": "file",
			"value": ""
		},
		{
			"key": "verifyCode",
			"value": ""
		}
	]
}